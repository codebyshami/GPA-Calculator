{"version":3,"sources":["Body.js","App.js","reportWebVitals.js","index.js"],"names":["Body","useState","result","setresult","count","setcount","cards","Array","length","i","push","placeholder","id","name","value","type","min","className","onClick","e","ShowCards","totalCH","totalGrades","totalRes","idOfCh","idOfGrade","ch","parseFloat","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPA8EeA,EA5EF,WAAO,IAAD,EACWC,mBAAS,GADpB,mBACVC,EADU,KACFC,EADE,OAESF,mBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,KAGbC,EAAQ,IAAIC,MAAM,KAGtB,WACED,EAAME,OAAS,EACf,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOK,IACzBH,EAAMI,KACJ,gCACE,uBAAOC,YAAY,iBACnB,yBAAQC,GAAE,eAAUH,GAAKI,KAAK,QAA9B,UACE,wBAAQC,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,OAAd,gBACA,wBAAQA,MAAM,MAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,MAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,MAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEF,uBACEF,GAAE,YAAOH,GACTM,KAAK,SACLJ,YAAY,eACZK,IAAI,MAEN,wBAAQC,UAAU,SAASC,QAAS,SAACC,GAAD,OAAOd,EAASD,EAAQ,IAA5D,sBApBQK,IALhBW,GA+CA,OACE,gCACE,qBAAKH,UAAU,YAAf,SACE,kDAFJ,IAKE,sBAAKA,UAAU,iBAAf,UACE,0CACA,gCACE,+BAAOX,IACP,wBAAQY,QAzBA,WAId,IAHA,IAAIG,EAAU,EACVC,EAAc,EACdC,EAAW,EACNd,EAAI,EAAGA,EAAIL,EAAOK,IAAK,CAC9B,IAAIe,EAAM,YAAQf,GACdgB,EAAS,eAAWhB,GACpBiB,EAAKC,WAAWC,SAASC,eAAeL,GAAQV,OACpDO,EAAUK,EAAKL,EACfC,EAAcK,WAAWC,SAASC,eAAeJ,GAAWX,OAC5DS,GAAsBI,WAAWD,EAAKJ,GAExCnB,EAAUoB,EAAWF,IAaWN,KAAK,SAA/B,0BAIF,wBAAQG,QAAS,SAACC,GAAD,OAAOd,EAASD,EAAQ,IAAzC,yBAEA,qBAAKa,UAAU,UAAf,SACE,gDAAmBf,cC7Dd4B,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCOSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASC,eAAe,SAM1BE,M","file":"static/js/main.60c04865.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Body.css\";\r\nconst Body = () => {\r\n  const [result, setresult] = useState(0);\r\n  const [count, setcount] = useState(1);\r\n  let cards = new Array([]);\r\n\r\n  ShowCards();\r\n  function ShowCards() {\r\n    cards.length = 0;\r\n    for (let i = 0; i < count; i++) {\r\n      cards.push(\r\n        <div key={i}>\r\n          <input placeholder=\"Subject Name\" />\r\n          <select id={`grade${i}`} name=\"grade\">\r\n            <option value=\"0\">GRADE</option>\r\n            <option value=\"4\"> A </option>\r\n            <option value=\"3.75\">A-</option>\r\n            <option value=\"3.5\">B+</option>\r\n            <option value=\"3\">B</option>\r\n            <option value=\"2.5\">C+</option>\r\n            <option value=\"2\">C</option>\r\n            <option value=\"1.5\">D+</option>\r\n            <option value=\"1\">D</option>\r\n            <option value=\"0\">F</option>\r\n          </select>\r\n          <input\r\n            id={`ch${i}`}\r\n            type=\"number\"\r\n            placeholder=\"Credit Hours\"\r\n            min=\"1\"\r\n          />\r\n          <button className=\"cancel\" onClick={(e) => setcount(count - 1)}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  const Results = () => {\r\n    let totalCH = 0;\r\n    let totalGrades = 0;\r\n    let totalRes = 0.0;\r\n    for (let i = 0; i < count; i++) {\r\n      let idOfCh = `ch${i}`;\r\n      let idOfGrade = `grade${i}`;\r\n      let ch = parseFloat(document.getElementById(idOfCh).value);\r\n      totalCH = ch + totalCH;\r\n      totalGrades = parseFloat(document.getElementById(idOfGrade).value);\r\n      totalRes = totalRes + parseFloat(ch * totalGrades);\r\n    }\r\n    setresult(totalRes / totalCH);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1>Gpa Calculator</h1>\r\n      </div>\r\n      s\r\n      <div className=\"container-body\">\r\n        <h2>Semester</h2>\r\n        <div>\r\n          <form>{cards}</form>\r\n          <button onClick={Results} type=\"submit\">\r\n            Calculate\r\n          </button>\r\n        </div>\r\n        <button onClick={(e) => setcount(count + 1)}>Add Subject</button>\r\n\r\n        <div className=\"results\">\r\n          <h4>Your GPA is : {result}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import \"./App.css\";\nimport Body from \"./Body\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}